#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   //   10
        };
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    macros {
        styl_to_nrml: styl_to_nrml {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LC(G) &kp Q>;

            label = "STYL_TO_NRML";
        };

        styl_to_note: styl_to_note {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LC(G) &kp W>;

            label = "STYL_TO_NOTE";
        };

        styl_to_code: styl_to_code {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LC(G) &kp E>;

            label = "STYL_TO_CODE";
        };

        styl_to_hi_light: styl_to_hi_light {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LC(G) &kp R>;

            label = "STYL_TO_HI_LIGHT";
        };

        fnt_to_code: fnt_to_code {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp LEFT_ALT &kp H &kp F &kp F &kp C &kp O &kp U &kp R &kp ENTER>;

            label = "FNT_TO_CODE";
        };

        cut: cut {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LC(X)>;

            label = "CUT";
        };

        copy: copy {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LC(INSERT)>;

            label = "COPY";
        };

        paste: paste {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LS(INSERT)>;

            label = "PASTE";
        };

        del_l: del_l {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp HOME &kp LS(END) &kp DELETE>;

            label = "DEL_L";
        };

        shift_home: shift_home {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LS(HOME)>;

            label = "SHIFT_HOME";
        };

        shift_end: shift_end {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LS(END)>;

            label = "SHIFT_END";
        };

        del_w_fwd: del_w_fwd {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LC(DELETE)>;

            label = "DEL_W_FWD";
        };

        del_w_back: del_w_back {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LC(BACKSPACE)>;

            label = "DEL_W_BACK";
        };

        srch_s_fwd: srch_s_fwd {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LC(F) &kp F3>;

            label = "SRCH_S_FWD";
        };

        srch_s_back: srch_s_back {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LC(F) &kp LS(F3)>;

            label = "SRCH_S_BACK";
        };

        jmp_w_fwd: jmp_w_fwd {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LC(RIGHT)>;

            label = "JMP_W_FWD";
        };

        jmp_w_back: jmp_w_back {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LC(LEFT)>;

            label = "JMP_W_BACK";
        };

        sel_w_fwd: sel_w_fwd {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LC(LS(RIGHT))>;

            label = "SEL_W_FWD";
        };

        sel_w_back: sel_w_back {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LC(LS(LEFT))>;

            label = "SEL_W_BACK";
        };

        ctrl_f10: ctrl_f10 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LC(F10)>;

            label = "CTRL_F10";
        };

        ctrl_dot: ctrl_dot {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LC(PERIOD)>;

            label = "CTRL_DOT";
        };

        shw_desk: shw_desk {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LG(D)>;

            label = "SHW_DESK";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&kp ESC         &kp N1        &kp N2    &kp N3       &kp N4          &lt 7 N5     &kp UP_ARROW     &kp N6         &kp N7       &kp N8     &kp N9   &kp N0           &kp DELETE
&kp TAB         &kp Q         &kp W     &kp E        &kp R           &kp T        &kp DOWN_ARROW   &kp Y          &kp U        &kp I      &kp O    &kp P            &kp BSLH
&kp LEFT_SHIFT  &kp A         &kp S     &kp D        &kp F           &kp G        &kp LEFT_ARROW   &kp H          &kp J        &kp K      &kp L    &kp SEMI         &kp APOS
&kp LCTRL       &kp Z         &kp X     &kp C        &kp V           &kp B        &kp RIGHT_ARROW  &kp N          &kp M        &kp COMMA  &kp DOT  &kp FSLH         &kp RCTRL
&kp C_MUTE      &kp LEFT_ALT  &lt 3 F2  &lt 2 GRAVE  &lt 1 LEFT_GUI  &kp SPACE    &kp ENTER        &kp BACKSPACE  &lt 6 ENTER  &mo 4      &mo 7    &kp RIGHT_SHIFT
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "Base";
        };

        layer_1 {
            bindings = <
&kp TILDE   &kp F1           &kp F2          &kp F3           &kp F4           &kp F5             &mmv MOVE_UP     &kp F6           &kp F7           &kp F8      &kp F9     &kp F10           &trans
&trans      &kp GRAVE        &mkp LCLK       &mkp MCLK        &mkp RCLK        &mkp MB4           &mmv MOVE_DOWN   &kp PG_UP        &kp END          &kp UP      &kp HOME   &kp MINUS         &kp EQUAL
&trans      &kp TILDE        &trans          &del_l           &trans           &mkp MB5           &mmv MOVE_LEFT   &kp PG_DN        &kp LEFT         &kp DOWN    &kp RIGHT  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&trans      &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_SPI    &mmv MOVE_RIGHT  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &kp INSERT  &kp F11    &kp F12           &trans
&kp C_MUTE  &trans           &trans          &trans           &trans           &trans             &mkp LCLK        &trans           &trans           &trans      &trans     &trans
            >;

            display-name = "L 1";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            bindings = <
&kp TILDE  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &mmv MOVE_UP     &kp F6  &kp F7  &kp F8      &kp F9     &kp F10      &trans
&trans     &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans          &mmv MOVE_DOWN   &trans  &trans  &kp F11     &kp F12    &kp UNDER    &kp PLUS
&trans     &out OUT_USB  &out OUT_BLE    &trans        &trans        &trans          &mmv MOVE_LEFT   &trans  &trans  &trans      &trans     &kp LBRC     &kp RBRC
&trans     &sys_reset    &trans          &bootloader   &trans        &trans          &mmv MOVE_RIGHT  &trans  &trans  &sys_reset  &soft_off  &bootloader  &trans
&trans     &trans        &trans          &trans        &trans        &trans          &mkp LCLK        &trans  &trans  &trans      &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
            label = "L2";
        };

        layer_3 {
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans        &trans        &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans        &trans        &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans        &trans        &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans        &trans        &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;

            label = "BT";
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans  &trans                &trans                 &trans    &trans  &kp UNDERSCORE  &kp EQUAL  &kp ASTERISK  &kp SLASH  &trans      &trans
&trans  &trans  &trans  &kp LBKT              &kp RBKT               &trans    &trans  &kp MINUS       &kp N7     &kp N8        &kp N9     &trans      &trans
&trans  &trans  &trans  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans    &trans  &kp PLUS        &kp N4     &kp N5        &kp N6     &trans      &trans
&trans  &trans  &trans  &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans    &trans  &kp N0          &kp N1     &kp N2        &kp N3     &kp PERIOD  &trans
&trans  &trans  &trans  &trans                &trans                 &trans    &trans  &trans          &trans     &trans        &trans     &trans
            >;

            label = "R1";
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans     &trans       &trans    &trans      &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp PG_UP  &jmp_w_back  &kp UP    &jmp_w_fwd  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp PG_DN  &kp LEFT     &kp DOWN  &kp RIGHT   &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans     &trans       &trans    &trans      &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans     &trans       &trans    &trans      &trans
            >;

            label = "R2";
        };

        layer_6 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;

            label = "R3";
        };

        layer_7 {
            bindings = <
&sys_reset      &bootloader   &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &bootloader  &sys_reset
&soft_off       &out OUT_BLE  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans       &soft_off
&bt BT_CLR      &out OUT_USB  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans       &trans
&bt BT_CLR_ALL  &trans        &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans       &trans
&trans          &trans        &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;

            label = "Sys";
        };
    };
};
